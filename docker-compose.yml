services:
  batch:
    build:
      context: ./modules/batch_pipeline  # Pointing to the batch directory within modules
      dockerfile: Dockerfile.batch
    depends_on:
      - kafka
      - chroma
    volumes:
      - ./:/app/
    env_file:  # Load environment variables from .env file
      - ./modules/batch_pipeline/.env
    networks:
      - project-network

  summarizer:
    build:
      context: ./modules/summarization
      dockerfile: Dockerfile.summary
    depends_on:
      - kafka
    networks:
      - project-network

  output:
    build:
      context: ./modules/inference_pipeline
      dockerfile: Dockerfile.inference
    depends_on:
      - kafka
    ports:
      - "7860:7860"
      - "11434:11434"
    networks:
      - project-network

  chroma:
    image: ghcr.io/chroma-core/chroma:latest
    volumes:
      - index_data:/chroma/.chroma/index
    ports:
      - 8000:8000
    networks:
      - project-network

  zookeeper:
    image: wurstmeister/zookeeper
    ports:
      - "2181:2181"
    networks:
      - project-network

  kafka:
    image: wurstmeister/kafka
    ports:
      - "9092:9092"
    environment:
      KAFKA_ADVERTISED_LISTENERS: INSIDE://kafka:9093,OUTSIDE://localhost:9094
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INSIDE:PLAINTEXT,OUTSIDE:PLAINTEXT
      KAFKA_LISTENERS: INSIDE://0.0.0.0:9093,OUTSIDE://0.0.0.0:9094
      KAFKA_INTER_BROKER_LISTENER_NAME: INSIDE
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
    networks:
      - project-network
    depends_on:
      - zookeeper
    healthcheck:
      test: ["CMD", "zookeeper-shell.sh", "localhost:2181", "ruok"]
      interval: 30s
      timeout: 10s
      retries: 5
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock

  create-topics:
    image: wurstmeister/kafka
    depends_on:
      - kafka
    command: >
      bash -c "
      until kafka-topics.sh --bootstrap-server kafka:9093 --list; do sleep 5; done;
      kafka-topics.sh --create --topic gradio_events --bootstrap-server kafka:9093 --replication-factor 1 --partitions 1 &&
      kafka-topics.sh --create --topic data_collection --bootstrap-server kafka:9093 --replication-factor 1 --partitions 1 &&
      kafka-topics.sh --create --topic summary --bootstrap-server kafka:9093 --replication-factor 1 --partitions 1"
    networks:
      - project-network

networks:
  project-network:
    driver: bridge

volumes:
  index_data:
    driver: local
  backups:
    driver: local
