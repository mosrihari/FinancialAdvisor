services:
  batch:
    build:
      context: ./modules/batch_pipeline  # Pointing to the batch directory within modules
      dockerfile: Dockerfile.batch
    depends_on:
      - kafka
      - chromadb
    env_file:  # Load environment variables from .env file
      - ./modules/batch_pipeline/.env
    networks:
      - project-network

  summarizer:
    build:
      context: ./modules/summarization
      dockerfile: Dockerfile.summary
    depends_on:
      - kafka
    networks:
      - project-network

  output:
    build:
      context: ./modules/inference_pipeline
      dockerfile: Dockerfile.inference
    depends_on:
      - kafka
    ports:
      - "7860:7860"
    networks:
      - project-network

  chromadb:
    build:
      context: ./modules/batch_pipeline
      dockerfile: Dockerfile.chromadb
    container_name: chromadb_container
    volumes:
      - chromadb_data:/data
    networks:
      - project-network

  zookeeper:
    image: wurstmeister/zookeeper
    ports:
      - "2181:2181"
    networks:
      - project-network

  kafka:
    image: wurstmeister/kafka
    ports:
      - "9092:9092"
    environment:
      KAFKA_ADVERTISED_LISTENERS: INSIDE://kafka:9092,OUTSIDE://localhost:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INSIDE:PLAINTEXT,OUTSIDE:PLAINTEXT
      KAFKA_LISTENERS: INSIDE://0.0.0.0:9092,OUTSIDE://0.0.0.0:9092
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
    networks:
      - project-network
    depends_on:
      - zookeeper
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock

  create-topics:
    image: wurstmeister/kafka
    depends_on:
      - kafka
    command: >
      bash -c "
      kafka-topics.sh --create --topic input_topic --bootstrap-server kafka:9092 --replication-factor 1 --partitions 1 &&
      kafka-topics.sh --create --topic articles_topic --bootstrap-server kafka:9092 --replication-factor 1 --partitions 1 &&
      kafka-topics.sh --create --topic summary_topic --bootstrap-server kafka:9092 --replication-factor 1 --partitions 1"
    networks:
      - project-network

networks:
  project-network:
    driver: bridge

volumes:
  chromadb_data:  # Volume for ChromaDB persistence
